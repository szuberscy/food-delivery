openapi: "3.0.3"
info:
  title: "FoodDelivery API"
  description: "FoodDelivery API"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
paths:
  /v1/users:
    post:
      description: |
        Registers a new user. 
        
        Validation rules:
          - name:
            - cannot be blank
          - surname:
            - cannot be blank
          - email:
            - must be valid email address
          - password:
            - must contain at least 8 characters
            - must contain at least one letter
            - must contain at least one digit
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/UserRegistrationRequest"
            example:
              name: Matt
              surname: Hancock
              email: matt@gov.co.uk
        required: true
      responses:
        "201":
          description: "Created"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/UserRegistrationResponse"
              example:
                id: "84301a15-0d9e-4fee-8b92-c3efa97b5fc9"
        "400":
          description: "Bad Request"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "validation exception"
                errors: [
                  "name cannot be blank",
                  "surname cannot be blank",
                  "invalid email",
                  "password must contain at least 8 characters",
                  "password must contain at least one letter",
                  "password must contain at least one digit"
                ]
        "409":
          description: "Conflict"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "invalid registration request"
                errors: [
                  "user with email exists"
                ]
        "415":
          $ref: "#/components/responses/415_UnsupportedMediaType"
        "500":
          $ref: "#/components/responses/500_InternalServerError"
  /v1/session:
    post:
      description: |
        Creates a new user session.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/CreateSessionRequest"
            example:
              username: matt@gov.co.uk
              password: 5tr0NGp@s$wo_rD
        required: true
      responses:
        "201":
          description: "Created"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/CreateSessionResponse"
              example:
                token: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiIvIiwiaXNzIjoiaHR0cDovLzAuMC4wLjA6ODA4MSIsInVzZXJuYW1lIjoibWVAZ21haWwuY29tIiwiZXhwIjoxNjk1NDE5MTYxfQ.ARAhmTDISq0k6xKFdQaMzJKdoqa54hrGZmneLM-dbuPFN8Awsrb8hcwvDL8HJJCk1RKzcgUQqcPi0Cy-oVgfWA"
components:
  responses:
    415_UnsupportedMediaType:
      description: "Unsupported Media Type"
    500_InternalServerError:
      description: "Internal Server Error"
  schemas:
    CreateSessionRequest:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
      required:
        - username
        - password
    CreateSessionResponse:
      type: object
      properties:
        token:
          type: "string"
      required:
        - token
    UserRegistrationRequest:
      type: "object"
      properties:
        name:
          type: "string"
        surname:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
      required:
        - name
        - surname
        - email
        - password
    UserRegistrationResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "UUIDv4"
      required:
        - id
    ErrorResponse:
      type: "object"
      properties:
        message:
          type: "string"
        errors:
          type: "array"
          items:
            type: "string"
      required:
        - message
        - errors